syntax = "proto3";

package api;
option go_package="github.com/gemlab-dev/relor/gen/pb/api";

import "google/protobuf/duration.proto";
import "graph/graph.proto";

message WorkflowState {
    string status = 1;
    string current_node = 2;
}

message RunRequest {
    string id = 1;
    graph.Graph graph = 2;
}

message RunResponse {
}

message GetRequest {
    string id = 1;
}

message GetResponse {
    WorkflowState state = 1;
    string transition_id = 2;
    repeated string available_result_labels = 4;
}

message UpdateRequest {
    string id = 1;

    // Repeat current transition ID to prevent concurrent updates.
    // This is optimistic locking mechanism:
    // if the transition ID is different from the current one, the update will be rejected.
    string transition_id = 2;
    
    string result_label = 3;
}

message UpdateResponse {
}

message Transition {
    string from = 1;
    string to = 2;
    string label = 3;
    google.protobuf.Duration walltime = 4;
}

message HistoryResponse {
    repeated Transition transitions = 1;
    string graphviz = 2;
}

service WorkflowService {
    rpc Run(RunRequest) returns (RunResponse) {};
    rpc Get(GetRequest) returns (GetResponse) {};
    rpc History(GetRequest) returns (HistoryResponse) {};
    rpc Update(UpdateRequest) returns (UpdateResponse) {};
}